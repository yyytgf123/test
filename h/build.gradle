plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.4' // Spring Boot 3.1.x는 Java 17과 호환
	id 'io.spring.dependency-management' version '1.1.3' // Spring Boot 3.1.x 권장 버전
	id("com.github.node-gradle.node") version "3.5.1" // 최신 Node Gradle Plugin
}

node {
	download = true
	/**
	 * Node.js 버전
	 */
	version = "20.10.0"

	/**
	 * npm 버전
	 */
	npmVersion = "10.2.3"
	nodeProjectDir = file("${projectDir}/src/main/resources/static")
}

group = 'lh'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17) // Java 17 고정
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	//NotNull 어노테이션
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	developmentOnly("org.springframework.boot:spring-boot-devtools")
	runtimeOnly 'com.mysql:mysql-connector-j'


}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.register("tailwindcss", NpxTask) {
	command.set("tailwind")
	args.set([
			"-i", "${projectDir}/src/main/resources/static/tailwinds.css",
			"-o", "${projectDir}/src/main/resources/static/css/tailwind-out.css"
	])
	dependsOn tasks.npmInstall
}

tasks.named("processResources") {
	dependsOn "tailwindcss" // tailwindcss 작업을 processResources 전에 실행
}
